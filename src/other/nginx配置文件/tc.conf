#配置负载均衡后台服务器服务器
upstream tomcat {
        #server  127.0.0.1:8090 max_fails=3 fail_timeout=3s weight=10;   #tomcat1
        #server  127.0.0.1:8080 max_fails=3 fail_timeout=3s weight=10;   #tomcat2
        server  127.0.0.1:8081 max_fails=3 fail_timeout=3s weight=10;   #还可以nginx自己代理自己的另一个端口
        keepalive 30;
    }
    server {
        listen  8082;
        server_name localhost;

        # 对 / 所有做负载均衡+反向代理
        location = / {   #精确匹配/,主机名后不能带任何字符串，
            proxy_redirect off;
            proxy_set_header  Host  $host;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass        http://tomcat;    #设置反向代理
        }

        #location / {    #因为所有地址都以/开头，所以这条规则将匹配到所有请求,但正则和最长字符串会优先匹配
        #    proxy_redirect off;
        #    proxy_set_header  Host  $host;
        #    proxy_set_header  X-Real-IP  $remote_addr;
        #    proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        #    proxy_pass        http://tomcat;    #设置反向代理
        #}

        #location /a1/ {  #匹配任何以 /a1/ 开头的地址，匹配符合以后，还要继续往下搜索，只有后面的正在表达式没有匹配到时，这一条才采用，root下或被代理的服务地址下必须要有对应的目录
            #root /Users/l/Library/Tomcat/apache-tomcat-8.0.47/webapps;
        #}
        location ^~ /a1/ {  #匹配任何以 /a1/ 开头的地址，匹配匹配符合以后，停止往下搜索，就采用这一条
            root /Users/l/Library/Tomcat/apache-tomcat-8.0.47/webapps;
        }
        location ~ /a1/ {  #与  location /a1/   相同
            root /Users/l/Library/Tomcat/apache-tomcat-8.0.47/webapps/ROOT;
        }

        location ~* \.(gif|jpg|jpeg)$ {  #匹配任何以 gif,jpg,jpeg结尾的地址
            root /Users/l/Downloads;
        }

    }
